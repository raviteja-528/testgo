- name: DNS Resolver Cleanup Playbook
  hosts: localhost
  gather_facts: false
  vars:
    compartment_id: "ocid1.compartment.oc1..example"
    region: "us-ashburn-1"
    config_file: "~/.oci/config"
    config_profile: "DEFAULT"
    dns_resolvers: []

  tasks:

    - name: Get all DNS resolvers in compartment
      shell: >
        oci dns resolver list
        --compartment-id {{ compartment_id }}
        --region {{ region }}
        --config-file {{ config_file }}
        --profile {{ config_profile }}
        --query "data[*].id"
        --raw-output
      register: resolver_output

    - name: Set resolver list
      set_fact:
        dns_resolvers: "{{ resolver_output.stdout_lines }}"

    - name: Loop through resolvers and delete all rules
      shell: >
        oci dns resolver rule list
        --resolver-id {{ item }}
        --region {{ region }}
        --config-file {{ config_file }}
        --profile {{ config_profile }}
        --query "data[*].id"
        --raw-output
      register: resolver_rules
      loop: "{{ dns_resolvers }}"
      loop_control:
        loop_var: item
      changed_when: false

    - name: Delete each resolver rule
      shell: >
        oci dns resolver rule delete
        --rule-id {{ item }}
        --region {{ region }}
        --force
        --config-file {{ config_file }}
        --profile {{ config_profile }}
      loop: "{{ resolver_rules.results | map(attribute='stdout_lines') | list | flatten }}"
      when: item != ""
      loop_control:
        label: "{{ item }}"

    - name: List resolver endpoints
      shell: >
        oci dns resolver endpoint list
        --resolver-id {{ item }}
        --region {{ region }}
        --config-file {{ config_file }}
        --profile {{ config_profile }}
        --query "data[*].{id:id}"
        --raw-output
      register: endpoint_result
      loop: "{{ dns_resolvers }}"
      loop_control:
        loop_var: item
      changed_when: false

    - name: Delete resolver endpoints
      shell: >
        oci dns resolver endpoint delete
        --resolver-id {{ item.item }}
        --resolver-endpoint-id {{ endpoint }}
        --region {{ region }}
        --force
        --config-file {{ config_file }}
        --profile {{ config_profile }}
      loop: "{{ item.stdout_lines }}"
      loop_control:
        loop_var: endpoint
      with_items: "{{ endpoint_result.results }}"
      when: endpoint != ""

    - name: List resolver view attachments
      shell: >
        oci dns resolver endpoint-association list
        --resolver-id {{ item }}
        --region {{ region }}
        --config-file {{ config_file }}
        --profile {{ config_profile }}
        --query "data[*].{id:id, view_id:view-id, is_shared:is-shared}"
        --raw-output
      register: view_attachments
      loop: "{{ dns_resolvers }}"
      loop_control:
        loop_var: item
      changed_when: false

    - name: Detach and delete non-shared views
      block:
        - name: Detach view
          shell: >
            oci dns view detach
            --resolver-id {{ item.item }}
            --view-id {{ view.view_id }}
            --region {{ region }}
            --force
            --config-file {{ config_file }}
            --profile {{ config_profile }}
          loop: "{{ item.stdout_lines | map('from_json') | list }}"
          loop_control:
            loop_var: view
          when: view.is_shared == "false"

        - name: Delete view
          shell: >
            oci dns view delete
            --view-id {{ view.view_id }}
            --region {{ region }}
            --force
            --config-file {{ config_file }}
            --profile {{ config_profile }}
          loop: "{{ item.stdout_lines | map('from_json') | list }}"
          loop_control:
            loop_var: view
          when: view.is_shared == "false"
      with_items: "{{ view_attachments.results }}"
      when: item.stdout_lines | length > 0
